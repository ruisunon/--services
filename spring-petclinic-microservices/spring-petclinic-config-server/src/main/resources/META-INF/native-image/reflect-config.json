[
  {
    "name": "org.eclipse.jgit.api.MergeCommand$FastForwardMode$Merge",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.internal.JGitText",
    "allPublicFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.CoreConfig$AutoCRLF",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.CoreConfig$CheckStat",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.CoreConfig$EOL",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.CoreConfig$HideDotFiles",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.eclipse.jgit.lib.CoreConfig$SymLinks",
    "methods": [
      {
        "name": "values",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation",
    "methods": [
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties"
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader"
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer"
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener"
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader"
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.SpringApplication",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.origin.OriginProvider[]"
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter$$Lambda$366\/0x0000000840381840",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.KeyProperties",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.cloud.commons.httpclient.ApacheHttpClientConnectionManagerFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.httpclient.ApacheHttpClientFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.httpclient.DefaultApacheHttpClientConnectionManagerFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.httpclient.DefaultApacheHttpClientFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.util.InetUtils",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.util.InetUtilsProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigClientHealthProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigClientProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.config.client.ConfigServerHealthIndicator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.config.environment.PropertyValueDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.config.server.EnableConfigServer"
  },
  {
    "name": "org.springframework.cloud.config.server.composite.ConditionalOnMissingSearchPathLocator"
  },
  {
    "name": "org.springframework.cloud.config.server.composite.ConditionalOnSearchPathLocator"
  },
  {
    "name": "org.springframework.cloud.config.server.config.ConfigServerHealthIndicator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.config.server.config.ConfigServerProperties",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.cloud.config.server.encryption.CipherEnvironmentEncryptor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "decrypt",
        "parameterTypes": [
          "org.springframework.cloud.config.environment.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.server.encryption.EncryptionController",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.cloud.config.server.encryption.EnvironmentEncryptor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.config.server.encryption.TextEncryptorLocator"
  },
  {
    "name": "org.springframework.cloud.config.server.resource.GenericResourceRepository",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.config.server.resource.ResourceController",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.cloud.config.server.resource.ResourceRepository",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.config.server.ssh.HostKeyAlgoSupported",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "groups",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      },
      {
        "name": "payload",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.server.ssh.HostKeyAlgoSupportedValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "initialize",
        "parameterTypes": [
          "java.lang.annotation.Annotation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.server.ssh.HostKeyAndAlgoBothExist",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "groups",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      },
      {
        "name": "payload",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.server.ssh.HostKeyAndAlgoBothExistValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "initialize",
        "parameterTypes": [
          "java.lang.annotation.Annotation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.server.ssh.KnownHostsFileIsValid",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "groups",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      },
      {
        "name": "payload",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.server.ssh.KnownHostsFileValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "initialize",
        "parameterTypes": [
          "java.lang.annotation.Annotation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.server.ssh.PrivateKeyIsValid",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "groups",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      },
      {
        "name": "payload",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.server.ssh.PrivateKeyValidator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "initialize",
        "parameterTypes": [
          "java.lang.annotation.Annotation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.server.support.AbstractScmAccessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getBasedir",
        "parameterTypes": []
      },
      {
        "name": "getEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getPassphrase",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getSearchPaths",
        "parameterTypes": []
      },
      {
        "name": "getUri",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "isStrictHostKeyChecking",
        "parameterTypes": []
      },
      {
        "name": "setBasedir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      },
      {
        "name": "setPassphrase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "setSearchPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setStrictHostKeyChecking",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.server.support.AbstractScmAccessorProperties",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getBasedir",
        "parameterTypes": []
      },
      {
        "name": "getDefaultLabel",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getPassphrase",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getSearchPaths",
        "parameterTypes": []
      },
      {
        "name": "getUri",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "isStrictHostKeyChecking",
        "parameterTypes": []
      },
      {
        "name": "setBasedir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setDefaultLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassphrase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSearchPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setStrictHostKeyChecking",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.config.server.support.EnvironmentRepositoryProperties",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.config.server.support.HttpEnvironmentRepositoryProperties",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityVerifier",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityVerifierProperties",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.configuration.SpringBootVersionVerifier",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.environment.EnvironmentManager",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.restart.RestartEndpoint"
  },
  {
    "name": "org.springframework.cloud.context.scope.refresh.RefreshScope"
  },
  {
    "name": "org.springframework.cloud.health.RefreshScopeHealthIndicator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.graalvm.utils.LiteConfigurationInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.ReactiveHttpInputMessage"
  },
  {
    "name": "org.springframework.http.codec.CodecConfigurer"
  },
  {
    "name": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.AbstractHttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getDefaultCharset",
        "parameterTypes": []
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "setDefaultCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setSupportedMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.GenericHttpMessageConverter",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getObjectMapper",
        "parameterTypes": []
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "setObjectMapper",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      },
      {
        "name": "setPrettyPrint",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.server.reactive.HttpHandler"
  },
  {
    "name": "org.springframework.scheduling.SchedulingTaskExecutor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "newThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "setAwaitTerminationMillis",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setAwaitTerminationSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRejectedExecutionHandler",
        "parameterTypes": [
          "java.util.concurrent.RejectedExecutionHandler"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWaitForTasksToCompleteOnShutdown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
  },
  {
    "name": "org.springframework.security.crypto.encrypt.Encryptors$NoOpTextEncryptor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.crypto.encrypt.TextEncryptor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.util.AntPathMatcher",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.util.ConcurrentReferenceHashMap$Segment[]"
  },
  {
    "name": "org.springframework.util.CustomizableThreadCreator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "createThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "getThreadGroup",
        "parameterTypes": []
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "getThreadPriority",
        "parameterTypes": []
      },
      {
        "name": "isDaemon",
        "parameterTypes": []
      },
      {
        "name": "setDaemon",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setThreadGroup",
        "parameterTypes": [
          "java.lang.ThreadGroup"
        ]
      },
      {
        "name": "setThreadGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadPriority",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.util.PathMatcher",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationManager",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationStrategy",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.accept.MediaTypeFileExtensionResolver",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMethod[]"
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.ServletContextAware",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.WebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.support.GenericWebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.support.WebApplicationObjectSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setServletContext",
        "parameterTypes": [
          "javax.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "isForceRequestEncoding",
        "parameterTypes": []
      },
      {
        "name": "isForceResponseEncoding",
        "parameterTypes": []
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForceEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceRequestEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceResponseEncoding",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.FormContentFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setFormConverter",
        "parameterTypes": [
          "org.springframework.http.converter.FormHttpMessageConverter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.GenericFilterBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getFilterConfig",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": [
          "javax.servlet.FilterConfig"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "javax.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.OncePerRequestFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "javax.servlet.ServletRequest",
          "javax.servlet.ServletResponse",
          "javax.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.RequestContextFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setThreadContextInheritable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.method.support.CompositeUriComponentsContributor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.method.support.UriComponentsContributor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.MultipartResolver",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.util.UrlPathHelper",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.yaml.snakeyaml.Yaml"
  },
  {
    "name": "short[]"
  }
]
