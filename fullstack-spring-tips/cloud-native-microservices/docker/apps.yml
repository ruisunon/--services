version: "3.8"
services:

  product-service:
    image: "${PRODUCT_SERVICE_IMAGE}"
    container_name: products-service
    environment:
      - QUARKUS_DATASOURCE_JDBC_DRIVER=org.postgresql.Driver
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://bookstore-postgres:5432/products
      - QUARKUS_DATASOURCE_USERNAME=postgres
      - QUARKUS_DATASOURCE_PASSWORD=postgres
    ports:
      - "8081:8081"
    restart: unless-stopped

  order-service:
    image: "${ORDER_SERVICE_IMAGE}"
    container_name: order-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - APP_PRODUCT_SERVICE_URL=http://product-service:8081
      - SPRING_DATASOURCE_DRIVER-CLASS-NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_URL=jdbc:postgresql://bookstore-postgres:5432/orders
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING.RABBITMQ.HOST=rabbitmq
      - SPRING.RABBITMQ.PORT=5672
      - SPRING.RABBITMQ.USERNAME=guest
      - SPRING.RABBITMQ.PASSWORD=guest
    ports:
      - "8082:8082"
    restart: unless-stopped
    depends_on:
      - bookstore-postgres
      - rabbitmq

  delivery-service:
    image: "${DELIVERY_SERVICE_IMAGE}"
    container_name: delivery-service
    environment:
      - RABBITMQ_URI=amqp://rabbitmq:5672
    ports:
      - "8083:8083"
    restart: unless-stopped
    depends_on:
      - rabbitmq

  bookstore-ui:
    image: "${BOOKSTORE_UI_IMAGE}"
    container_name: bookstore-ui
    ports:
      - "8080:80"
    environment:
      PRODUCT_SERVICE_API_BASE_URL: http://localhost:8081
      ORDER_SERVICE_API_BASE_URL: http://localhost:8082
