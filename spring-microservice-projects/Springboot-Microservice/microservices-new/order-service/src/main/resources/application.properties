spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=mysql
spring.jpa.hibernate.ddl-auto=update

server.port=8081
eureka.client.serviceUrl.defaultZone=http://eureka:passwrod@localhost:8761/eurekaspring.applicationb.name=order-service
spring.appcation.name=order-service

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# resiliance4j Properties
resiliance4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resiliance4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resiliance4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resiliance4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resiliance4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resiliance4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resiliance4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resiliance4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true
# link to curcuit breaker status - http://localhost:8081/actuator/health

# resiliance4j timeout properties
resiliance4j.timelimiter.instances.inventory.timeout-duration=3s 

# resiliance4j retry properties
resiliance4j.retry.instances.inventory.max-attempts=3
resiliance4j.retry.instances.inventory.wait-duration=5s # try call 3 times, wait 5s between calls

spring.ziplin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0

# Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic # default topic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.programming.techie.orderservice.event.OrderPlacedEvent